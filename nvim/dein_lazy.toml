[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertCharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'zchee/deoplete-clang'
on_ft = ['c', 'cpp', 'cmake']
on_i = 1
depends = ['deoplete.nvim']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path = '/usr/local/Cellar/llvm/4.0.0_1/lib/libclang.dylib'
    let g:deoplete#sources#clang#clang_header = '/usr/include/'
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_ft = ['python']
on_i = 1
depends = ['deoplete.nvim']
hook_source = '''
'''

# [[plugins]]
# repo = 'HerringtonDarkholme/deoplete-typescript'
# on_ft = ['typescript']
# on_i = 1
# depends = ['deoplete.nvim']


[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'rhysd/vim-clang-format'
hook_source  = '''
  "BasedOnStyle": "Google",
  "IndentWidth": 4,
  "AllowShortIfStatementsOnASingleLine": "true",
  "AlignAfterOpenBracket": "true",
  "BinPackArguments": "false"
  "CommentPragmas": "^",
  "IndentCaseLabels": "true",
  "Standard": "Auto"
'''


# [[plugins]]
# repo = 'othree/yajs.vim'
# on_ft = 'javascript'
# hook_source  = '''
#   autocmd BufNewFile,BufRead *.js set filetype=javascript
# '''

